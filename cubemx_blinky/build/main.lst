ARM GAS  /tmp/ccLBVb2k.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler:
  25              	.LFB721:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccLBVb2k.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Configure the system clock */
  80:Core/Src/main.c ****   SystemClock_Config();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Initialize all configured peripherals */
  87:Core/Src/main.c ****   MX_GPIO_Init();
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccLBVb2k.s 			page 3


  90:Core/Src/main.c ****   /* USER CODE END 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  94:Core/Src/main.c ****   while (1)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     HAL_Delay(500);    /* USER CODE END WHILE */
  97:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, LED1_Pin|LED2_Pin);
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 100:Core/Src/main.c ****   }
 101:Core/Src/main.c ****   /* USER CODE END 3 */
 102:Core/Src/main.c **** }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /**
 105:Core/Src/main.c ****   * @brief System Clock Configuration
 106:Core/Src/main.c ****   * @retval None
 107:Core/Src/main.c ****   */
 108:Core/Src/main.c **** void SystemClock_Config(void)
 109:Core/Src/main.c **** {
 110:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 111:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 116:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 119:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 120:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 121:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 123:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 124:Core/Src/main.c ****   {
 125:Core/Src/main.c ****     Error_Handler();
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c ****   /** Configure the SYSCLKSource, HCLK, PCLK1 and PCLK2 clocks dividers
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK3|RCC_CLOCKTYPE_HCLK
 130:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 131:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK2;
 132:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 133:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 136:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     Error_Handler();
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c **** }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /tmp/ccLBVb2k.s 			page 4


 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 150:Core/Src/main.c ****   * @retval None
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c **** void Error_Handler(void)
 153:Core/Src/main.c **** {
  27              		.loc 1 153 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 154:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 155:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 156:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 156 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccLBVb2k.s 			page 5


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /tmp/ccLBVb2k.s 			page 6


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
ARM GAS  /tmp/ccLBVb2k.s 			page 7


 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 207 27 view .LVU2
ARM GAS  /tmp/ccLBVb2k.s 			page 8


  38              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 209 3 view .LVU3
  40              		.syntax unified
  41              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 157:Core/Src/main.c ****   while (1)
  49              		.loc 1 157 3 discriminator 1 view .LVU4
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****   }
  50              		.loc 1 159 3 discriminator 1 view .LVU5
 157:Core/Src/main.c ****   while (1)
  51              		.loc 1 157 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE721:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	SystemClock_Config:
  65              	.LFB720:
 109:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  66              		.loc 1 109 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 104
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 00B5     		push	{lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 9BB0     		sub	sp, sp, #108
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 112
 110:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 110 3 view .LVU8
 110:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 110 22 is_stmt 0 view .LVU9
  79 0004 4822     		movs	r2, #72
  80 0006 0021     		movs	r1, #0
  81 0008 08A8     		add	r0, sp, #32
  82 000a FFF7FEFF 		bl	memset
  83              	.LVL0:
 111:Core/Src/main.c **** 
  84              		.loc 1 111 3 is_stmt 1 view .LVU10
 111:Core/Src/main.c **** 
  85              		.loc 1 111 22 is_stmt 0 view .LVU11
ARM GAS  /tmp/ccLBVb2k.s 			page 9


  86 000e 0023     		movs	r3, #0
  87 0010 0293     		str	r3, [sp, #8]
  88 0012 0393     		str	r3, [sp, #12]
  89 0014 0493     		str	r3, [sp, #16]
  90 0016 0593     		str	r3, [sp, #20]
  91 0018 0693     		str	r3, [sp, #24]
  92 001a 0793     		str	r3, [sp, #28]
 115:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
  93              		.loc 1 115 3 is_stmt 1 view .LVU12
  94              	.LBB6:
 115:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
  95              		.loc 1 115 3 view .LVU13
 115:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
  96              		.loc 1 115 3 view .LVU14
  97 001c 1549     		ldr	r1, .L9
  98 001e 0A68     		ldr	r2, [r1]
  99 0020 22F4C062 		bic	r2, r2, #1536
 100 0024 42F48062 		orr	r2, r2, #1024
 101 0028 0A60     		str	r2, [r1]
 115:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
 102              		.loc 1 115 3 view .LVU15
 103 002a 0A68     		ldr	r2, [r1]
 104 002c 02F4C062 		and	r2, r2, #1536
 105 0030 0192     		str	r2, [sp, #4]
 115:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
 106              		.loc 1 115 3 view .LVU16
 107 0032 019A     		ldr	r2, [sp, #4]
 108              	.LBE6:
 115:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
 109              		.loc 1 115 3 view .LVU17
 118:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 110              		.loc 1 118 3 view .LVU18
 118:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 111              		.loc 1 118 36 is_stmt 0 view .LVU19
 112 0034 2022     		movs	r2, #32
 113 0036 0892     		str	r2, [sp, #32]
 119:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 114              		.loc 1 119 3 is_stmt 1 view .LVU20
 119:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 115              		.loc 1 119 30 is_stmt 0 view .LVU21
 116 0038 0122     		movs	r2, #1
 117 003a 1092     		str	r2, [sp, #64]
 120:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 118              		.loc 1 120 3 is_stmt 1 view .LVU22
 120:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 119              		.loc 1 120 41 is_stmt 0 view .LVU23
 120 003c 1193     		str	r3, [sp, #68]
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 121              		.loc 1 121 3 is_stmt 1 view .LVU24
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 122              		.loc 1 121 35 is_stmt 0 view .LVU25
 123 003e 6022     		movs	r2, #96
 124 0040 1292     		str	r2, [sp, #72]
 122:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 125              		.loc 1 122 3 is_stmt 1 view .LVU26
 122:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 126              		.loc 1 122 34 is_stmt 0 view .LVU27
ARM GAS  /tmp/ccLBVb2k.s 			page 10


 127 0042 1393     		str	r3, [sp, #76]
 123:Core/Src/main.c ****   {
 128              		.loc 1 123 3 is_stmt 1 view .LVU28
 123:Core/Src/main.c ****   {
 129              		.loc 1 123 7 is_stmt 0 view .LVU29
 130 0044 08A8     		add	r0, sp, #32
 131 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 132              	.LVL1:
 123:Core/Src/main.c ****   {
 133              		.loc 1 123 6 view .LVU30
 134 004a 70B9     		cbnz	r0, .L7
 129:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 135              		.loc 1 129 3 is_stmt 1 view .LVU31
 129:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 136              		.loc 1 129 31 is_stmt 0 view .LVU32
 137 004c 4F23     		movs	r3, #79
 138 004e 0293     		str	r3, [sp, #8]
 132:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139              		.loc 1 132 3 is_stmt 1 view .LVU33
 132:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140              		.loc 1 132 34 is_stmt 0 view .LVU34
 141 0050 0021     		movs	r1, #0
 142 0052 0391     		str	r1, [sp, #12]
 133:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 143              		.loc 1 133 3 is_stmt 1 view .LVU35
 133:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 144              		.loc 1 133 35 is_stmt 0 view .LVU36
 145 0054 0491     		str	r1, [sp, #16]
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 146              		.loc 1 134 3 is_stmt 1 view .LVU37
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147              		.loc 1 134 36 is_stmt 0 view .LVU38
 148 0056 0591     		str	r1, [sp, #20]
 135:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 149              		.loc 1 135 3 is_stmt 1 view .LVU39
 135:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 150              		.loc 1 135 36 is_stmt 0 view .LVU40
 151 0058 0691     		str	r1, [sp, #24]
 136:Core/Src/main.c **** 
 152              		.loc 1 136 3 is_stmt 1 view .LVU41
 136:Core/Src/main.c **** 
 153              		.loc 1 136 36 is_stmt 0 view .LVU42
 154 005a 0791     		str	r1, [sp, #28]
 138:Core/Src/main.c ****   {
 155              		.loc 1 138 3 is_stmt 1 view .LVU43
 138:Core/Src/main.c ****   {
 156              		.loc 1 138 7 is_stmt 0 view .LVU44
 157 005c 02A8     		add	r0, sp, #8
 158 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 159              	.LVL2:
 138:Core/Src/main.c ****   {
 160              		.loc 1 138 6 view .LVU45
 161 0062 20B9     		cbnz	r0, .L8
 142:Core/Src/main.c **** 
 162              		.loc 1 142 1 view .LVU46
 163 0064 1BB0     		add	sp, sp, #108
 164              	.LCFI2:
ARM GAS  /tmp/ccLBVb2k.s 			page 11


 165              		.cfi_remember_state
 166              		.cfi_def_cfa_offset 4
 167              		@ sp needed
 168 0066 5DF804FB 		ldr	pc, [sp], #4
 169              	.L7:
 170              	.LCFI3:
 171              		.cfi_restore_state
 125:Core/Src/main.c ****   }
 172              		.loc 1 125 5 is_stmt 1 view .LVU47
 173 006a FFF7FEFF 		bl	Error_Handler
 174              	.LVL3:
 175              	.L8:
 140:Core/Src/main.c ****   }
 176              		.loc 1 140 5 view .LVU48
 177 006e FFF7FEFF 		bl	Error_Handler
 178              	.LVL4:
 179              	.L10:
 180 0072 00BF     		.align	2
 181              	.L9:
 182 0074 00040058 		.word	1476396032
 183              		.cfi_endproc
 184              	.LFE720:
 186              		.section	.text.main,"ax",%progbits
 187              		.align	1
 188              		.global	main
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu softvfp
 194              	main:
 195              	.LFB719:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 196              		.loc 1 65 1 view -0
 197              		.cfi_startproc
 198              		@ Volatile: function does not return.
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI4:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 
 206              		.loc 1 73 3 view .LVU50
 207 0002 FFF7FEFF 		bl	HAL_Init
 208              	.LVL5:
  80:Core/Src/main.c **** 
 209              		.loc 1 80 3 view .LVU51
 210 0006 FFF7FEFF 		bl	SystemClock_Config
 211              	.LVL6:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 212              		.loc 1 87 3 view .LVU52
 213 000a FFF7FEFF 		bl	MX_GPIO_Init
 214              	.LVL7:
 215              	.L12:
  94:Core/Src/main.c ****   {
 216              		.loc 1 94 3 discriminator 1 view .LVU53
ARM GAS  /tmp/ccLBVb2k.s 			page 12


  96:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, LED1_Pin|LED2_Pin);
 217              		.loc 1 96 5 discriminator 1 view .LVU54
 218 000e 4FF4FA70 		mov	r0, #500
 219 0012 FFF7FEFF 		bl	HAL_Delay
 220              	.LVL8:
  97:Core/Src/main.c **** 
 221              		.loc 1 97 5 discriminator 1 view .LVU55
 222 0016 41F21001 		movw	r1, #4112
 223 001a 4FF09040 		mov	r0, #1207959552
 224 001e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 225              	.LVL9:
  94:Core/Src/main.c ****   {
 226              		.loc 1 94 9 discriminator 1 view .LVU56
 227 0022 F4E7     		b	.L12
 228              		.cfi_endproc
 229              	.LFE719:
 231              		.text
 232              	.Letext0:
 233              		.file 3 "/media/christoph/ext1TB/projekte/37_RC/git-firmware-dev/AM32-MultiRotor-ESC-firmware/tool
 234              		.file 4 "/media/christoph/ext1TB/projekte/37_RC/git-firmware-dev/AM32-MultiRotor-ESC-firmware/tool
 235              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 236              		.file 6 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/system_stm32wlxx.h"
 237              		.file 7 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 238              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 239              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_flash.h"
 240              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_rcc.h"
 241              		.file 11 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
 242              		.file 12 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 243              		.file 13 "Core/Inc/gpio.h"
 244              		.file 14 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_gpio.h"
 245              		.file 15 "<built-in>"
ARM GAS  /tmp/ccLBVb2k.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLBVb2k.s:16     .text.Error_Handler:0000000000000000 $t
     /tmp/ccLBVb2k.s:24     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccLBVb2k.s:57     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLBVb2k.s:64     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLBVb2k.s:182    .text.SystemClock_Config:0000000000000074 $d
     /tmp/ccLBVb2k.s:187    .text.main:0000000000000000 $t
     /tmp/ccLBVb2k.s:194    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
HAL_Delay
HAL_GPIO_TogglePin
